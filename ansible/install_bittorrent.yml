- hosts: localhost

  vars:
    - my_name: "BitTorrent"
    - my_file: "install_bittorrent"

    - systemd_units:
      - { name: "deluged", type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }
      - { name: "deluge-web", type: 'service', state: "started", enabled: "yes", restart: "yes", instance: "no" }

  tasks:

  - name: "{{ my_name }} - Load RetroNAS config"
    include_vars: retronas_vars.yml

  - name: "{{ my_name }} - install deluge from repos"
    apt:
       name: "{{ item }}"
       state: latest
    with_items:
      - geoip-bin
      - geoip-database
      - deluged
      - deluge-web
      - deluge-console

  - name: "{{ my_name }} - create bittorrent top level dir"
    file:
      path: "{{ retronas_path }}/bittorrent"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: "0775"
      state: directory

  - name: "{{ my_name }} - create bittorrent dirs"
    file:
      path: "{{ retronas_path }}/bittorrent/{{ item }}"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: "0775"
      state: directory
    with_items:
      - torrents
      - auto-add
      - downloading
      - complete

  - name: "{{ my_name }} - create deluge lib dir"
    file:
      path: "/var/lib/deluged"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: "0775"
      state: directory

  - name: "{{ my_name }} - create deluge config  dir"
    file:
      path: "/var/lib/deluged/config"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: "0775"
      state: directory

  - name: "{{ my_name }} - deluge autoadd conf"
    template:
      src: "templates/{{ my_file }}/autoadd.conf.j2"
      dest: "/var/lib/deluged/config/autoadd.conf"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: '0644'
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - deluge core conf"
    template:
      src: "templates/{{ my_file }}/core.conf.j2"
      dest: "/var/lib/deluged/config/core.conf"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: '0644'
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - deluged default"
    template:
      src: "templates/{{ my_file }}/default_deluged.j2"
      dest: "/etc/init.d/deluged"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: '0644'
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - deluge auth"
    template:
      src: "templates/{{ my_file }}/auth.j2"
      dest: "/var/lib/deluged/config/auth"
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: '0644'
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} -remove legacy deluged startup file"
    file:
      path: "/etc/init.d/deluged"
      state: absent

  - name: "{{ my_name }} - create startup service(s)"
    template:
      src: templates/{{ my_file }}/{{ item.name }}.{{ item.type }}.j2
      dest: /usr/lib/systemd/system/{{ item.name }}.{{ item.type }}
      owner: "{{ retronas_user }}"
      group: "{{ retronas_user }}"
      mode: 0644
    with_items:
      "{{ systemd_units }}"
    notify: "{{ my_name }} - Restart service"

  - name: "{{ my_name }} - enable service(s)"
    service:
      name: "{{ item.name }}.{{ item.type }}"
      state: "{{ item.state }}"
      enabled: "{{ item.enabled }}"
      daemon_reload: yes
    with_items:
      "{{ systemd_units }}"
    when:
      - item.instance == 'no'
    notify: "{{ my_name }} - Restart service"

  handlers:

  - name: "{{ my_name }} - Restart service"
    service:
      name: "{{ item.name }}.{{ item.type }}"
      state: restarted
      daemon_reload: yes
    with_items:
      "{{ systemd_units }}"
    when: 
      - item.restart == 'yes'
      - item.instance == 'no'

- import_playbook: retronas_system_config.yml
  vars:
    module_name: "bittorrent"
    module_state: "present"